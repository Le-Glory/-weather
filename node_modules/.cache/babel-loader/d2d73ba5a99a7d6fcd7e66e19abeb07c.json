{"remainingRequest":"D:\\桌面\\weather-guide-main\\node_modules\\babel-loader\\lib\\index.js!D:\\桌面\\weather-guide-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\桌面\\weather-guide-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面\\weather-guide-main\\src\\views\\Home\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\桌面\\weather-guide-main\\src\\views\\Home\\Home.vue","mtime":1652792544000},{"path":"D:\\桌面\\weather-guide-main\\babel.config.js","mtime":1652792544000},{"path":"D:\\桌面\\weather-guide-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653630129371},{"path":"D:\\桌面\\weather-guide-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1653630130486},{"path":"D:\\桌面\\weather-guide-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653630129371},{"path":"D:\\桌面\\weather-guide-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1653630131143}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1x1Njg0Q1x1OTc2Mi93ZWF0aGVyLWd1aWRlLW1haW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovL+WfjuW4gumAieaLqQppbXBvcnQgeyByZWdpb25EYXRhLCBDb2RlVG9UZXh0IH0gZnJvbSAiZWxlbWVudC1jaGluYS1hcmVhLWRhdGEiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWUiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb25zOiByZWdpb25EYXRhLAogICAgICBzZWxlY3RlZE9wdGlvbnM6IFtdLAogICAgICBhZGRyZXNzQWxsOiBbXSwKICAgICAgYWRkcmVzczogIiIsCiAgICAgIHdlYXRoRGF0YToge30sCiAgICAgIGNvdmVySW1nVXJsOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvYmFja2dyb3VuZC5qcGciKQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v6YCJ5oup5Zyw5Yy6CiAgICBzZWxlY3RDaXR5OiBmdW5jdGlvbiBzZWxlY3RDaXR5KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5hZGRyZXNzQWxsID0gW107CiAgICAgIHRoaXMuc2VsZWN0ZWRPcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKGNpdHkpIHsKICAgICAgICBfdGhpcy5hZGRyZXNzQWxsLnB1c2goQ29kZVRvVGV4dFtjaXR5XSk7CiAgICAgIH0pOwogICAgICB0aGlzLmlucXVpcmVXZWF0aGVyKCk7CiAgICB9LAogICAgLy8g54K55Ye75aSp5rCU5p+l6K+iCiAgICBpbnF1aXJlV2VhdGhlcjogZnVuY3Rpb24gaW5xdWlyZVdlYXRoZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzMSwgcmVzMiwgcmVzMzsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoX3RoaXMyLmFkZHJlc3NBbGxbMl0gPT0gIuW4gui+luWMuiIgfHwgX3RoaXMyLmFkZHJlc3NBbGwubGVuZ3RoID09IDIpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLmFkZHJlc3MgPSBfdGhpczIuYWRkcmVzc0FsbFsxXTsgLy/lpoLmnpzpgInluILovpbljLrlsLHlrprkvY3liLDkuoznuqflnLDlnYAKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi5hZGRyZXNzID0gX3RoaXMyLmFkZHJlc3NBbGxbMl07IC8v5Yy65Z+f56CB5omA5a+55bqU55qE5bGe5oCn5YC85Y2z5Lit5paH5Zyw5Z2ACiAgICAgICAgICAgICAgICB9IC8vIOW8gOWni+ivt+axguaOpeWPowoKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGFwaS5nZXRDaXR5V2VhdGhlcihfdGhpczIuYWRkcmVzcyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlczEgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlczEuc3RhdHVzID09PSAib2siKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8v6K+35rGC5pWw5o2u5oiQ5YqfCiAgICAgICAgICAgICAgICBfdGhpczIuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAi5p+l6K+i5oiQ5YqfIiwKICAgICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpczIud2VhdGhEYXRhID0gcmVzMTsKCiAgICAgICAgICAgICAgICBfdGhpczIud2VhdGhEYXRhLmRhaWx5X2ZvcmVjYXN0LnNoaWZ0KCk7CgogICAgICAgICAgICAgICAgX3RoaXMyLndlYXRoRGF0YS5kYWlseV9mb3JlY2FzdC5zcGxpY2UoMywgMyk7IC8v5peg5rOV5om+5Yiw6K+l5ZywCgoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyODsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgaWYgKCEocmVzMS5zdGF0dXMgPT09ICJ1bmtub3duIGxvY2F0aW9uIikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI4OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyAxLuWPquaYr+aXoOazleiOt+WPluWIsOS4iee6p+WcsOWdgOS/oeaBrwogICAgICAgICAgICAgICAgLy8g6YeN5paw6K+35rGC5LiK5LiA57qn5Zyw5Z2ACiAgICAgICAgICAgICAgICBfdGhpczIuYWRkcmVzcyA9IF90aGlzMi5hZGRyZXNzQWxsWzFdOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kYXBpLmdldENpdHlXZWF0aGVyKF90aGlzMi5hZGRyZXNzKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIHJlczIgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlczIuc3RhdHVzID09PSAib2siKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjM7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzMi4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICLmn6Xor6LmiJDlip8iLAogICAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF90aGlzMi53ZWF0aERhdGEgPSByZXMyOwoKICAgICAgICAgICAgICAgIF90aGlzMi53ZWF0aERhdGEuZGFpbHlfZm9yZWNhc3Quc2hpZnQoKTsKCiAgICAgICAgICAgICAgICBfdGhpczIud2VhdGhEYXRhLmRhaWx5X2ZvcmVjYXN0LnNwbGljZSgzLCAzKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjg7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgICAgIC8vIOmHjeaWsOivt+axguS4iuS4gOe6p+WcsOWdgAogICAgICAgICAgICAgICAgX3RoaXMyLmFkZHJlc3MgPSBfdGhpczIuYWRkcmVzc0FsbFswXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGFwaS5nZXRDaXR5V2VhdGhlcihfdGhpczIuYWRkcmVzcyk7CgogICAgICAgICAgICAgIGNhc2UgMjY6CiAgICAgICAgICAgICAgICByZXMzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzMy5zdGF0dXMgPT09ICJvayIpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLiRub3RpZnkoewogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAi5p+l6K+i5oiQ5YqfIiwKICAgICAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICBfdGhpczIud2VhdGhEYXRhID0gcmVzMzsKCiAgICAgICAgICAgICAgICAgIF90aGlzMi53ZWF0aERhdGEuZGFpbHlfZm9yZWNhc3Quc2hpZnQoKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMi53ZWF0aERhdGEuZGFpbHlfZm9yZWNhc3Quc3BsaWNlKDMsIDMpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgLy8gMi7lvbvlupXml6Dms5Xmib7liLDor6XlnLAKICAgICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAi5oqx5q2J77yM5peg5rOV6I635Y+W6K+l5Zyw55u45YWz5L+h5oGvIiwKICAgICAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDI4OgogICAgICAgICAgICAgICAgLy8g6IOM5pmv5Zu+54mH5YiH5o2iCiAgICAgICAgICAgICAgICBfdGhpczIuYmdDaGFuZ2UoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDog4zmma/lm77niYfliIfmjaIKICAgIGJnQ2hhbmdlOiBmdW5jdGlvbiBiZ0NoYW5nZSgpIHsKICAgICAgdmFyIHdlYXRoZXIgPSB0aGlzLndlYXRoRGF0YS5ub3cuY29uZC50eHQ7CiAgICAgIHRoaXMuY292ZXJJbWdVcmwgPSByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvIi5jb25jYXQod2VhdGhlciwgIi5qcGciKSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home\" :style=\"{ backgroundImage: 'url(' + coverImgUrl + ')' }\">\n    <div class=\"weather-box\">\n      <el-cascader\n        size=\"medium\"\n        separator=\">\"\n        :options=\"options\"\n        placeholder=\"请选择 / 搜索城市\"\n        v-model=\"selectedOptions\"\n        :props=\"{ expandTrigger: 'hover' }\"\n        filterable\n        @change=\"selectCity\"\n      />\n      <div class=\"now-cond\" v-if=\"Object.keys(weathData).length\">\n        <p class=\"address\">\n          <i class=\"el-icon-place\" />{{ weathData.basic.city }}\n        </p>\n        <p class=\"upTime\">{{ weathData.basic.update.loc }}</p>\n        <i class=\"condTxt\">{{ weathData.now.cond.txt }}</i>\n        <p class=\"wind\">{{ weathData.now.wind.dir }}</p>\n        <p class=\"tmp\">\n          {{ weathData.daily_forecast[0].tmp.min }}℃~{{\n            weathData.daily_forecast[0].tmp.max\n          }}℃\n        </p>\n        <h1>未来3日天气预报</h1>\n        <el-table\n          :data=\"weathData.daily_forecast\"\n          border\n          style=\"width: 100%\"\n          stripe\n        >\n          <el-table-column label=\"日期\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <i class=\"el-icon-time\"></i>\n              <span style=\"margin-left: 10px\">{{ scope.row.date }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"cond.txt_d\" label=\"天气\" />\n          <el-table-column prop=\"tmp.min\" label=\"最低温度(℃)\" width=\"120\" />\n          <el-table-column prop=\"tmp.max\" label=\"最高温度(℃)\" width=\"120\" />\n          <el-table-column prop=\"wind.dir\" label=\"风向\" />\n        </el-table>\n      </div>\n      <div class=\"tip\" v-else>\n        <h1>选择城市开始查询吧 !</h1>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//城市选择\nimport { regionData, CodeToText } from \"element-china-area-data\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      options: regionData,\n      selectedOptions: [],\n      addressAll: [],\n      address: \"\",\n      weathData: {},\n      coverImgUrl: require(\"@/assets/img/background.jpg\"),\n    };\n  },\n  methods: {\n    //选择地区\n    selectCity() {\n      this.addressAll = [];\n      this.selectedOptions.forEach((city) => {\n        this.addressAll.push(CodeToText[city]);\n      });\n      this.inquireWeather();\n    },\n    // 点击天气查询\n    async inquireWeather() {\n      if (this.addressAll[2] == \"市辖区\" || this.addressAll.length == 2) {\n        this.address = this.addressAll[1]; //如果选市辖区就定位到二级地址\n      } else {\n        this.address = this.addressAll[2]; //区域码所对应的属性值即中文地址\n      }\n      // 开始请求接口\n      const res1 = await this.$api.getCityWeather(this.address);\n      if (res1.status === \"ok\") {\n        //请求数据成功\n        this.$notify({\n          title: \"查询成功\",\n          type: \"success\",\n        });\n        this.weathData = res1;\n        this.weathData.daily_forecast.shift();\n        this.weathData.daily_forecast.splice(3, 3);\n        //无法找到该地\n      } else if (res1.status === \"unknown location\") {\n        // 1.只是无法获取到三级地址信息\n        // 重新请求上一级地址\n        this.address = this.addressAll[1];\n        const res2 = await this.$api.getCityWeather(this.address);\n        if (res2.status === \"ok\") {\n          this.$notify({\n            title: \"查询成功\",\n            type: \"success\",\n          });\n          this.weathData = res2;\n          this.weathData.daily_forecast.shift();\n          this.weathData.daily_forecast.splice(3, 3);\n        } else {\n          // 重新请求上一级地址\n          this.address = this.addressAll[0];\n          const res3 = await this.$api.getCityWeather(this.address);\n          if (res3.status === \"ok\") {\n            this.$notify({\n              title: \"查询成功\",\n              type: \"success\",\n            });\n            this.weathData = res3;\n            this.weathData.daily_forecast.shift();\n            this.weathData.daily_forecast.splice(3, 3);\n          } else {\n            // 2.彻底无法找到该地\n            this.$message({\n              message: \"抱歉，无法获取该地相关信息\",\n              type: \"error\",\n            });\n          }\n        }\n      }\n      // 背景图片切换\n      this.bgChange();\n    },\n    // 背景图片切换\n    bgChange() {\n      const weather = this.weathData.now.cond.txt;\n      this.coverImgUrl = require(`@/assets/img/${weather}.jpg`);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.home {\n  @mixin xy($top: auto, $right: auto, $bottom: auto, $left: auto) {\n    top: $top;\n    right: $right;\n    bottom: $bottom;\n    left: $left;\n  }\n  @mixin wh($wid, $hei) {\n    width: $wid;\n    height: $hei;\n  }\n  @mixin font($size, $fw: bold, $color: #fff) {\n    font-size: $size;\n    font-weight: $fw;\n    color: $color;\n  }\n  position: relative;\n  min-height: 100vh;\n  // background: url(\"~\");\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n  .weather-box {\n    position: absolute;\n    text-align: center;\n    z-index: 999;\n    @include xy(5%, \"\", \"\", 50%);\n    transform: translateX(-50%);\n    .now-cond {\n      h1 {\n        @include font(20px);\n      }\n      .address,\n      .upTime {\n        @include font(20px);\n        text-shadow: 5px 5px 5px #000;\n      }\n      .condTxt {\n        @include font(80px, bolder);\n        text-shadow: 5px 5px 5px #ccc;\n      }\n      .wind,\n      .tmp {\n        @include font(20px, bolder, #fff);\n        text-shadow: 2px 2px 5px rgb(144, 149, 216);\n      }\n    }\n    .tip {\n      h1 {\n        @include font(50px, bolder);\n        text-shadow: 2px 2px 5px rgb(144, 149, 216);\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/Home"}]}